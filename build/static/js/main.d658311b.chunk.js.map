{"version":3,"sources":["images/memories.png","components/Posts/Post/styles.js","api/index.js","constants/actionTypes.js","components/Posts/Post/post.js","actions/posts.js","components/Posts/styles.js","components/Posts/posts.js","components/Form/styles.js","components/Form/form.js","styles.js","App.js","reducers/posts.js","reducers/index.js","index.js"],"names":["makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","Post","post","setCurrentId","classes","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","message","CardActions","a","api","data","type","payload","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","alignItem","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","find","p","useState","postData","setPostData","useEffect","handleSubmit","e","preventDefault","newPost","createPost","clear","Paper","autoComplete","noValidate","onSubmit","TextField","name","vairant","label","fullWidth","value","onChange","target","split","mutiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","useStyles","get","messsage","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","postReducer","action","filter","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d658311b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","import axios from 'axios'\n\n\nconst url =  'https://memories-gokul.herokuapp.com/posts';\n\nexport const fetchPosts = ()=> axios.get(url);\nexport const createPost = (newPost) => axios.post(url,newPost);\nexport const updatePost = (id,updatedPost)=>axios.patch(`${url}/${id}`,updatedPost);\nexport const deletePost = (id)=>axios.delete(`${url}/${id}`);\nexport const likePost = (id)=>axios.patch(`${url}/${id}/likePost`)","export const CREATE ='CREATE';\nexport const UPDATE ='UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE= 'LIKE';\n\n","import React from 'react'\nimport {Card,CardActions, CardContent, CardMedia,Button,Typography} from '@material-ui/core'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport makeStyles from './styles'\nimport moment from 'moment'\nimport {useDispatch} from 'react-redux'\nimport {deletePost,likePost} from '../../../actions/posts.js'\n\nconst Post = ({post,setCurrentId}) => {\n    const classes = makeStyles();\n    const dispatch = useDispatch();\n\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title}/>\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.creator}</Typography>\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button style={{color:'white'}} size=\"small\" onClick={()=>setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize=\"default\"/>\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag)=>`#${tag}`)}</Typography>\n            </div>\n                 <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\n            <CardContent>\n                 <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>{post.message}</Typography>\n            </CardContent>\n            <CardActions className={CardActions}>\n                <Button size=\"small\" color=\"primary\" onClick={()=>dispatch(likePost(post._id))}>\n                    <ThumbUpAltIcon fontSize=\"small\"/>\n                    &nbsp; Like &nbsp; \n                    {post.likeCount}\n                </Button>\n                <Button size=\"small\" color=\"primary\" onClick={()=>dispatch(deletePost(post._id))}>\n                    <DeleteIcon fontSize=\"small\"/>\n                     Delete\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post\n","\nimport * as api from '../api';\nimport {FETCH_ALL,CREATE,UPDATE,DELETE,LIKE} from '../constants/actionTypes';\n\n\n//Action creators\n\nexport const getPosts = ()=> async (dispatch)=> {\n    try {\n        const {data} = await api.fetchPosts();\n        console.log(`apidata: ${data.length}`)\n        dispatch({type:FETCH_ALL,payload: data});\n\n    }catch(err){\n        console.log(err.messsage);\n    }\n}\n\nexport const createPost = (post)=>async (dispatch)=>{\n    try {\n        const {data} = await api.createPost(post);\n\n        dispatch({type:CREATE,payload:data});\n    }catch(err) {\n        console.log(err);\n    }\n}\n\nexport const updatePost = (id,post)=> async(dispatch)=>{\n    try {\n        const {data} = await api.updatePost(id,post);\n        dispatch({type:UPDATE,payload:data})\n    }catch(err) {\n        console.log(err);\n    }\n}\n\nexport const deletePost = (id)=> async (dispatch)=>{\n    console.log(\"id\" + id);\n    try {\n          await api.deletePost(id);\n          dispatch({type:DELETE,payload:id})\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const likePost = (id) => async (dispatch)=>{\n    try {\n        const {data} = await api.likePost(id);\n        dispatch({type:LIKE,payload:data});\n    }catch(err) {\n        console.log(err);\n    }\n}\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from 'react'\nimport Post from './Post/post.js'\n\nimport {useSelector} from 'react-redux'\nimport makeStyles from './styles'\n\nimport {Grid,CircularProgress} from '@material-ui/core'\n\nconst Posts = ({setCurrentId}) => {\n    const classes = makeStyles();\n    const posts = useSelector((state)=>state.posts);\n\n    console.log(posts);\n    return (\n        !posts.length?<CircularProgress/>:(\n            <Grid className={classes.container} container alignItem=\"strech\" spacing={3}>\n                {posts.map((post)=>(\n                    <Grid key={post._id} item xs={12} sm={6}>\n                        <Post post={post} setCurrentId={setCurrentId}/>\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    )\n}\n\nexport default Posts\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React,{useState,useEffect} from 'react'\nimport makeStyles from './styles'\nimport {TextField,Button,Typography,Paper} from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport {useDispatch,useSelector,} from 'react-redux'\n\nimport {createPost,updatePost} from '../../actions/posts.js'\n\n\nconst Form = ({currentId,setCurrentId}) => {\n    const classes = makeStyles();\n    const dispatch = useDispatch();\n    const post = useSelector((state)=>currentId?state.posts.find((p)=>p._id === currentId):null);\n    const [postData,setPostData] = useState({\n        creator:'',\n        title:'',\n        message:'',\n        tags:'',\n        selectedFile:''\n    });\n\n    useEffect(()=>{\n        if(post) setPostData(post);\n    },[post]);\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(currentId)\n            dispatch(updatePost(currentId,postData));\n        else\n            dispatch(createPost(postData));\n        clear();\n    }\n    const clear = ()=>{\n        setCurrentId(null);\n        setPostData({\n            creator:'',\n            title:'',\n            message:'',\n            tags:'',\n            selectedFile:''\n        })\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={(e)=>handleSubmit(e)}>\n                <Typography variant=\"h6\">{currentId?\"Editing\":\"Creating\"} a Memory</Typography>\n                <TextField name=\"creator\" vairant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e)=>setPostData({...postData,creator:e.target.value})} />\n                <TextField name=\"title\" vairant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e)=>setPostData({...postData,title:e.target.value})} />\n                <TextField name=\"message\" vairant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e)=>setPostData({...postData,message:e.target.value})} />\n                <TextField name=\"tags\" vairant=\"outlined\" label=\"Tags(comma-seprated)\" fullWidth value={postData.tags} onChange={(e)=>setPostData({...postData,tags:e.target.value.split(',')})} />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type=\"file\"\n                        mutiple={false}\n                        onDone={({base64})=>setPostData({...postData,selectedFile:base64})}\n                    />\n                </div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button  variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form","import {makeStyles} from '@material-ui/core/styles';\n\nexport default makeStyles((theme)=>({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding:'15px 0px'\n      },\n      heading: {\n        color: 'rgba(0,183,255, 1)',\n        fontSize:'30px',\n      },\n      image: {\n        marginLeft: '10px',\n      },\n      [theme.breakpoints.down(\"sm\")]:{\n        mainContainer:{\n          flexDirection:\"column-reverse\"\n        }\n      }\n}));","import React,{useEffect} from 'react'\nimport {Container,AppBar,Typography,Row,Grid,Grow} from '@material-ui/core'\nimport memories from './images/memories.png'\n\nimport Posts from './components/Posts/posts'\nimport Form from './components/Form/form.js'\n\nimport useStyles from './styles.js'\nimport {useState} from 'react'\nimport {useDispatch} from 'react-redux'\n\nimport {getPosts} from './actions/posts.js'\n\nimport  './index.css'\n\nconst App = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [currentId,setCurrentId] = useState(null);\n\n    useEffect(()=>{\n        dispatch(getPosts());\n    },[dispatch]);\n    return (\n        <Container maxWidth=\"lg\">\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <Typography className={classes.heading} vairant=\"h2\" align=\"center\">Memories</Typography>\n                <img className={classes.image} src={memories} alt=\"memories\" height=\"60\"/>\n            </AppBar>\n            <Grow in>\n                <Container>\n                    <Grid className={classes.mainContainer} container justify=\"space-between\" alignItem=\"strech\" spacing=\"3\">\n                        <Grid item xs={12} sm={7}>\n                            <Posts setCurrentId={setCurrentId}/>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>\n    )\n}\n\nexport default App\n","import {FETCH_ALL,CREATE,UPDATE,LIKE,DELETE} from '../constants/actionTypes'\nconst postReducer = (posts= [],action)=>{\n    switch(action.type){\n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [...posts,action.payload];\n        case UPDATE:\n        case LIKE:\n            return posts.map((post)=>post._id === action.payload._id?action.payload:post);\n        case DELETE:\n            return posts.filter((post)=>post._id !== action.payload);\n        default:\n            return posts;\n    }\n}\n\nexport default postReducer;","import {combineReducers} from 'redux'\n\nimport postReducer from './posts'\n\n\nexport default combineReducers({\n    posts:postReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk'\n\nimport App from './App'\nimport reducers from './reducers'\n\nconst store = createStore(reducers,compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n,document.getElementById(\"root\"));"],"sourceRoot":""}